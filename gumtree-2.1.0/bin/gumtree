#!/usr/bin/env bash

##############################################################################
##
##  gumtree start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GUMTREE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="gumtree"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn ( ) {
    echo "$*"
}

die ( ) {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
esac

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

CLASSPATH=$APP_HOME/lib/dist-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/core-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/client-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/client.diff-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.antlr-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.antlr-antlr-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.antlr-css-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.antlr-json-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.antlr-php-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.antlr-r-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.antlr-xml-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.c-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.jdt-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.js-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/gen.ruby-2.1.0-SNAPSHOT.jar:$APP_HOME/lib/simmetrics-core-3.2.3.jar:$APP_HOME/lib/trove4j-3.0.3.jar:$APP_HOME/lib/gson-2.4.jar:$APP_HOME/lib/reflections-0.9.10.jar:$APP_HOME/lib/nanohttpd-webserver-2.1.1.jar:$APP_HOME/lib/rendersnake-1.9.0.jar:$APP_HOME/lib/antlr-3.5.2.jar:$APP_HOME/lib/org.eclipse.jdt.core-3.11.0.v20150602-1242.jar:$APP_HOME/lib/runtime-3.10.0-v20140318-2214.jar:$APP_HOME/lib/org.eclipse.core.resources-3.10.0.v20150423-0755.jar:$APP_HOME/lib/rhino-1.7.7.jar:$APP_HOME/lib/jrubyparser-0.5.3.jar:$APP_HOME/lib/guava-18.0.jar:$APP_HOME/lib/commons-codec-1.10.jar:$APP_HOME/lib/javassist-3.18.2-GA.jar:$APP_HOME/lib/annotations-2.0.1.jar:$APP_HOME/lib/nanohttpd-2.1.1.jar:$APP_HOME/lib/junit-4.8.2.jar:$APP_HOME/lib/servlet-api-2.4.jar:$APP_HOME/lib/commons-lang3-3.1.jar:$APP_HOME/lib/commons-io-2.0.1.jar:$APP_HOME/lib/spring-webmvc-4.1.6.RELEASE.jar:$APP_HOME/lib/jtidy-r938.jar:$APP_HOME/lib/guice-3.0.jar:$APP_HOME/lib/javax.inject-1.jar:$APP_HOME/lib/antlr-runtime-3.5.2.jar:$APP_HOME/lib/ST4-4.0.8.jar:$APP_HOME/lib/osgi-3.10.0-v20140606-1445.jar:$APP_HOME/lib/common-3.6.200-v20130402-1505.jar:$APP_HOME/lib/jobs-3.6.0-v20140424-0053.jar:$APP_HOME/lib/registry-3.5.400-v20140428-1507.jar:$APP_HOME/lib/preferences-3.5.200-v20140224-1527.jar:$APP_HOME/lib/contenttype-3.4.200-v20140207-1251.jar:$APP_HOME/lib/app-1.3.200-v20130910-1609.jar:$APP_HOME/lib/spring-beans-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-context-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-core-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-expression-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-web-4.1.6.RELEASE.jar:$APP_HOME/lib/aopalliance-1.0.jar:$APP_HOME/lib/cglib-2.2.1-v20090111.jar:$APP_HOME/lib/spring-aop-4.1.6.RELEASE.jar:$APP_HOME/lib/commons-logging-1.2.jar:$APP_HOME/lib/asm-3.1.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ] ; then
        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
            MAX_FD="$MAX_FD_LIMIT"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn "Could not set maximum file descriptor limit: $MAX_FD"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
    JAVACMD=`cygpath --unix "$JAVACMD"`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Add a user-defined pattern to the cygpath arguments
    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in "$@" ; do
        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
        else
            eval `echo args$i`="\"$arg\""
        fi
        i=$((i+1))
    done
    case $i in
        (0) set -- ;;
        (1) set -- "$args0" ;;
        (2) set -- "$args0" "$args1" ;;
        (3) set -- "$args0" "$args1" "$args2" ;;
        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
    esac
fi

# Split up the JVM_OPTS And GUMTREE_OPTS values into an array, following the shell quoting and substitution rules
function splitJvmOpts() {
    JVM_OPTS=("$@")
}
eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GUMTREE_OPTS


exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" com.github.gumtreediff.client.Run "$@"
